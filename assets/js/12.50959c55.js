(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{181:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("装饰器是Python中一个很重要的特性。有两个好处：")]),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("创建了一个函数，然后想为其添加性能监控，计数，加日志等额外的功能，便可以使用装饰器（性能监控装饰器， 计数装饰器，加日志装饰器），而且，这些装饰器也可以供别的有需要的函数使用，且可以自由组合。")]),t._v(" "),n("p",[t._v("关键点：")]),t._v(" "),t._m(3),t._v(" "),t._m(4),n("p",[t._v("NOTE:\n上面只是简单装饰器，复杂一点的装饰器还可以接收参数。可以思考一下如何处理？")]),t._v(" "),n("hr"),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("那么对于Ruby来讲，我该如何去实现Python类似的装饰器呢？")]),t._v(" "),n("p",[t._v("实现的思路：")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),n("p",[t._v("可以替换成：")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),n("p",[t._v("在装饰器方法里，接收一个block，用来表示原始方法，大概的格式如下：")]),t._v(" "),t._m(17),n("p",[t._v("现在的主要任务是如何实现 MyDecorator 模块的内容。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),n("p",[t._v("在上面说了：")]),t._v(" "),t._m(21),n("p",[t._v("需要实现的功能：")]),t._v(" "),t._m(22),n("p",[t._v("下面我们通过修改一些命名，来更加清晰地说明：")]),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),n("p",[t._v("alias vs alias_method")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://lazybios.com/2015/11/alias-vs-aliasmethod/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rails: alias 与 alias_method 的区别"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("闭包:")]),t._v(" "),t._m(32),t._v(" "),n("p",[t._v("block:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://mixandgo.com/blog/mastering-ruby-blocks-in-less-than-5-minutes",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mastering ruby blocks in less than 5 minutes - Mix & Go"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("method:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/9b62743a22f7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ruby中的method方法 - 简书"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("装饰器")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/4ad9111e71fc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ruby 实现装饰器模式 - 简书"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://coolshell.cn/articles/11265.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python修饰器的函数式编程 | | 酷 壳 - CoolShell"),n("OutboundLink")],1),t._v("\nhttps://taizilongxu.gitbooks.io/stackoverflow-about-python/content/3/README.html")])]),t._v(" "),t._m(33),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/wycats/ruby_decorators/blob/master/decorators.rb",target:"_blank",rel:"noopener noreferrer"}},[t._v("ruby_decorators/decorators.rb at master · wycats/ruby_decorators · GitHub"),n("OutboundLink")],1),t._v(" -- 这个是简单版")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/fredwu/ruby_decorators",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub - fredwu/ruby_decorators: Ruby method decorators inspired by Python."),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/michaelfairley/method_decorators",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub - michaelfairley/method_decorators: Python’s method decorators for Ruby"),n("OutboundLink")],1),t._v(" -- 这个较为完整的版本")])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"python装饰器-与-ruby实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python装饰器-与-ruby实现","aria-hidden":"true"}},[this._v("#")]),this._v(" Python装饰器 与 Ruby实现")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"python中的装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python中的装饰器","aria-hidden":"true"}},[this._v("#")]),this._v(" Python中的装饰器")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("DRY")]),this._v(" "),s("li",[this._v("组合更方便")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("Python中函数也是一个"),n("code",[t._v("对象")]),t._v("。a_function_to_decorate是对象引用，a_function_to_decorate()是执行。")]),t._v(" "),n("li",[t._v("装饰器本身也就一个函数而已。")]),t._v(" "),n("li",[t._v("装饰器函数在脚本载入的时候就执行了，相当于对原有函数的重写。")]),t._v(" "),n("li",[t._v("可以在函数中定义另一个函数，供使用或者返回，存在于函数内部。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("my_shiny_new_decorator")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("wrapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Before the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"After the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" wrapper\n\n@my_shiny_new_decorator\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"I am a stand alone function, don\'t you dare modify me"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 相当于方法重写")]),t._v("\na_stand_alone_function "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" my_shiny_new_decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_stand_alone_function"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na_stand_alone_function"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# @只是Python添加的一个语法糖")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"ruby实现python中类似的装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ruby实现python中类似的装饰器","aria-hidden":"true"}},[this._v("#")]),this._v(" Ruby实现Python中类似的装饰器")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"ruby与python的几个不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ruby与python的几个不同点","aria-hidden":"true"}},[this._v("#")]),this._v(" Ruby与Python的几个不同点")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Person")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" talk\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hehe\n      p "),n("span",{attrs:{class:"token string"}},[t._v('"hehe..."')]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n    p "),n("span",{attrs:{class:"token string"}},[t._v('"talking..."')]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\nperson "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("Person")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),n("span",{attrs:{class:"token class-name"}},[t._v("person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("talk")]),t._v("\nperson"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("talk")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nperson_b "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("Person")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),n("span",{attrs:{class:"token class-name"}},[t._v("person_b"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hehe")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("方法调用时，有没有括号是一样的。Ruby 中的methods并不是一个对象。")]),this._v(" "),s("li",[this._v("定义了"),s("code",[this._v("hehe")]),this._v("，其实变成了实例方法，对于Person类的实例都可见。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当加载一个脚本Ruby文件时，是一行一行执行，可以使用类宏的方式。")]),this._v(" "),s("li",[this._v("本质上，添加装饰器，就是重写用户定义的methods。")]),this._v(" "),s("li",[this._v("怎么做到自动重写？配合Ruby中一些钩子方法即可。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"使用-lambda-or-proc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-lambda-or-proc","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 lambda or Proc")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一开始我想，我可以使用 "),s("code",[this._v("lambda or Proc")]),this._v(" 来代替内部函数的定义， 并将其返回。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("my_shiny_new_decorator")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("wrapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Before the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"After the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" wrapper\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("my_shiny_new_decorator")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  wrapper "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Proc")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("do")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Before the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("a_function_to_decorate")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"After the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" wrapper\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是，这样一来，要调用方法的时候，得变成"),s("code",[this._v("a_stand_alone_function.call()")]),this._v(" ，这样就改变了原有使用方法。不太好。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"那就换种方式呗。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那就换种方式呗。","aria-hidden":"true"}},[this._v("#")]),this._v(" 那就换种方式呗。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Myclass")]),t._v("\n  extend "),n("span",{attrs:{class:"token constant"}},[t._v("MyDecorator")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("# 这是装饰器")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" my_shiny_new_decorator\n    p "),n("span",{attrs:{class:"token string"}},[t._v('"Before the function runs"')]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n    p "),n("span",{attrs:{class:"token string"}},[t._v('"After the function runs"')]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  wrap "),n("span",{attrs:{class:"token symbol"}},[t._v(":my_shiny_new_decorator")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("# 这是原始方法")]),t._v("\n    p "),n("span",{attrs:{class:"token string"}},[t._v('"I am a stand alone function, don\'t you dare modify me"')]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[s("code",[this._v("wrap :my_shiny_new_decorator")]),this._v("，Ruby脚本是按顺序执行的，这个类宏可以考虑使用一个栈的结构来实现，将"),s("code",[this._v("my_shiny_new_decorator")]),this._v("压进栈，再弹出，这样便可以保持顺序。")])]),this._v(" "),s("li",[s("p",[s("code",[this._v("使用define_methond")]),this._v("来重新定义方法，把原有方法嵌入装饰器方法中。")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),n("span",{attrs:{class:"token constant"}},[t._v("MyDecorator")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("# 钩子方法")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("method_added")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method_name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" decorator_methods"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empty"),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v("\n      decorator_method "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" decorator_methods"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop\n\n      "),n("span",{attrs:{class:"token comment"}},[t._v("# 使用alias_method生成一个别名指向。")]),t._v("\n      new_method_name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"'),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token delimiter tag"}},[t._v("#{")]),t._v("method_name"),n("span",{attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('_without_decorator"')]),t._v("\n      "),n("span",{attrs:{class:"token function"}},[t._v("alias_method")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_method_name"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method_name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),n("span",{attrs:{class:"token comment"}},[t._v("# 重写原来的方法")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("define_method")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method_name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("method")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_method"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call "),n("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n          "),n("span",{attrs:{class:"token function"}},[t._v("method")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_method_name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("wrap")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token variable"}},[t._v("@decorator_methods")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" decorator\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("# 一个栈,用来存装饰方法")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" decorator_methods\n    "),n("span",{attrs:{class:"token variable"}},[t._v("@decorator_methods")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),n("span",{attrs:{class:"token constant"}},[t._v("Myclass")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a_stand_alone_function\n"),n("span",{attrs:{class:"token comment"}},[t._v('# "Before the function runs"')]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('# "I am a stand alone function, don\'t you dare modify me"')]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v('# "After the function runs"')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"python中，如何使装饰器可以接收参数？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python中，如何使装饰器可以接收参数？","aria-hidden":"true"}},[this._v("#")]),this._v(" Python中，如何使装饰器可以接收参数？")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("@my_shiny_new_decorator\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 相当于方法重写")]),t._v("\na_stand_alone_function "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" my_shiny_new_decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_stand_alone_function"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("@my_shiny_new_decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decorator_args2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"I am a stand alone function, don\'t you dare modify me"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 相当于")]),t._v("\na_stand_alone_function "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" my_shiny_new_decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decorator_args2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_stand_alone_function"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 上面说明啥？")]),t._v("\n说明my_shiny_new_decorator"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decorator_args2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("返回一个 `接收一个function作为参数的函数` "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" 这不就是相当于原先的my_shiny_new_decorator？也就是说，需要新建一个函数，将原先my_shiny_new_decorator定为内部函数返回出来。\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("decorator_maker_with_arguments")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args1"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decorator_args2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"args1....{}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("format")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args1"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"args2....{}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token builtin"}},[t._v("format")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decorator_args2"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 原先的装饰器变为内部函数了")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("my_shiny_new_decorator")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("wrapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Before the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            a_function_to_decorate"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"After the function runs"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" wrapper\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 返回内部函数")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" my_shiny_new_decorator\n\n@decorator_maker_with_arguments"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"red"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"blue"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("a_stand_alone_function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"I am a stand alone function, don\'t you dare modify me"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na_stand_alone_function"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# ouput")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# args1....red")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# args2....blue")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# Before the function runs")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# I am a stand alone function, don't you dare modify me")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# After the function runs")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"关于闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于闭包","aria-hidden":"true"}},[this._v("#")]),this._v(" 关于闭包")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("无论是Python ，还是Ruby关于装饰器的实现，都涉及到一个很重要的基础，那就是"),s("code",[this._v("闭包")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("什么叫做"),s("code",[this._v("闭包")]),this._v("?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("简单来说，就是程序运行时，所带的一组相关绑定，可以穿越作用域。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"题外话："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题外话：","aria-hidden":"true"}},[this._v("#")]),this._v(" 题外话：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("method(:my_method_name)，可以根据方法名获取到对应的方法来实现执行。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[t._v("ef "),n("span",{attrs:{class:"token function"}},[t._v("dd")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  p a "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),n("span",{attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\nhaha "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("method")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token symbol"}},[t._v(":dd")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhaha"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("call")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("# 3")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考文档")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("[What is the difference between a block, a proc, and a lambda in ruby? - Build, Break, Learn.]")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"github上一些类似的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github上一些类似的实现","aria-hidden":"true"}},[this._v("#")]),this._v(" GitHub上一些类似的实现")])}],!1,null,null,null);e.options.__file="ruby_decorator.md";s.default=e.exports}}]);